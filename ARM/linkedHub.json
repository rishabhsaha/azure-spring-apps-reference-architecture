{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "tags": {
            "type": "object",
            "metadata": {
                "description": "The tags that will be associated to the VM"
            },
            "defaultValue": {
                "environment": "lab"
            }
        },
        "location":{
            "type": "string"
        },
        "hubCidr":{
            "type": "string"
        },
        "hubGatewaySubnetCidr":{
            "type": "string"
        },
        "hubFirewallSubnetCidr":{
            "type": "string"
        },
        "hubBastionSubnetCidr":{
            "type": "string"
        },
        "hubVnetName":{
            "type": "string"
        },
        "spokeVnetName":{
            "type": "string"
        },
         "spokeAppSubnetCidr":{
            "type": "string"
        },
         "spokeRuntimeSubnetCidr":{
            "type": "string"
        },
        "bastionPublicIpName":{
            "type": "string"
        },
        "azFirewallPublicIpName":{
            "type": "string"
        },
        "azureFirewallName":{
            "type": "string"
        },
        "laWorkspaceName":{
            "type": "string"
        },
        "bastionName":{
            "type": "string"
        },        
        "hubSharedServicesCidr":{
            "type": "string"
        },
        "hubAppGatewayCidr":{
            "type": "string"
        },
        "sharedServicesSubnetName":{
            "type": "string"
        },
        "appGatewaySubnetName":{
            "type": "string"
        }                     
    },
    "variables": {
        "springCloudSkuName": "S0",
        "springCloudSkuTier": "Standard",
        "vmSku": "Standard_DS2_v2",
        "keyVaultSku": "Standard",
        "ddosStandardProtection": false,
        "logAnalyticsRetention": 30,
        
        "location": "[resourceGroup().location]",
        "networkApiVersion": "2020-05-01",
        "dnsApiVersion": "2018-09-01",
        "resourceDeploymentsApiVersion": "2019-10-01",
        "laApiVersion": "2015-11-01-preview",
        "diagApiVersion": "2017-05-01-preview",
        "springApiVersion": "2020-07-01",
        "appInsightsApiVersion": "2015-05-01",
        "azureRbacApiVersion": "2020-04-01-preview",
        "keyVaultApiVersion": "2019-09-01",
        "hubVnetName": "vnet-hub",
        "spokeVnetName": "vnet-spoke",
        "hubCidr": "10.0.0.0/16",
        "spokeCidr": "10.1.0.0/16",
        "hubGatewaySubnetCidr": "10.0.0.0/24",
        "hubFirewallSubnetCidr": "10.0.1.0/24",
        "hubBastionSubnetCidr": "10.0.2.0/24",
        "hubAppGatewayCidr": "10.0.3.0/24",
        "hubSharedServicesCidr": "10.0.4.0/24",
        "spokeRuntimeSubnetCidr": "10.1.0.0/24",
        "spokeAppSubnetCidr": "10.1.1.0/24",
        "spokeSupportSubnetCidr": "10.1.2.0/24",
        "spokeDataSubnetCidr": "10.1.3.0/24",
        "springCloudServiceCidrs": "10.3.0.0/16,10.4.0.0/16,10.5.0.1/16",
        "appGatewaySubnetName": "snet-agw",
        "sharedServicesSubnetName": "snet-shared",
        "supportSubnetName": "snet-support",
        "runtimeSubnetName": "snet-runtime",
        "appSubnetName": "snet-app",
        "dataSubnetName": "snet-data",
        "bastionPublicIpName": "pip-bastion",
        "azFirewallPublicIpName": "pip-azfw",
        "bastionName": "bstss",
        "azureFirewallName": "fwhub",
        "hubRouteTable": "rt-hub",
        "hubVmName": "vm01",
        "hubToSpokePeeringName": "peerhubtospoke",
        "spokeRuntimeRouteTable": "rt-spokeruntime",
        "spokeAppRouteTable": "rt-spokeapp",
        "spokeToHubPeeringName": "peerspoketohub",
        "laWorkspaceName": "[concat('la-',uniqueString(subscription().id, resourceGroup().id))]",
        "keyVaultName": "[concat('kv-',uniqueString(subscription().id, resourceGroup().id))]",
        "mysqlServerName": "[concat('mysql-',uniqueString(resourceGroup().id))]",
        "nsgHubShared": "nsg-hubshared",
        "nsgSpokeRuntime": "nsg-spokeruntime",
        "nsgSpokeApp": "nsg-spokeapp",
        "appInsightsName": "[concat('appi-', uniqueString(subscription().id, resourceGroup().id))]",
        "springCloudInstanceName": "[concat('spring-', uniqueString(subscription().id, resourceGroup().id))]",
        "ownerDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
        "appPrivateDnsZone": "private.azuremicroservices.io",
        "keyVaultPrivateDnsZone": "privatelink.vaultcore.azure.net",
        "msSqlPrivateDnsZone": "privatelink.mysql.database.azure.com",
        "uniqueKvPrivateEndpointName": "[substring(concat(concat('pl-',variables('keyVaultName')),uniqueString(subscription().id, resourceGroup().id)),10)]",
        "uniqueKvPlConnName": "[substring(concat(concat('plconn',variables('keyVaultName')),uniqueString(subscription().id, resourceGroup().id)),10)]",
        "uniqueSqlPrivateEndpointName": "[substring(concat(concat('pl-',variables('mysqlServerName')),uniqueString(subscription().id, resourceGroup().id)),10)]",
        "uniqueSqlPlConnName": "[substring(concat(concat('plconn',variables('mysqlServerName')),uniqueString(subscription().id, resourceGroup().id)),10)]",
        "appPrivateZoneLinkName": "[concat(variables('appPrivateDnsZone'), '-link')]",
        "keyVaultPrivateZoneLinkName": "[concat(variables('keyVaultPrivateDnsZone'), '-link')]",
        "msSqlPrivateZoneLinkName": "[concat(variables('msSqlPrivateDnsZone'), '-link')]",
        "deployDnsARecord": "deploy-springDnsRecord",
        "deployRouteAssign": "deploy-routeAssign",
        "deployDnsSpokeRouteSettings": "deploy-dnsSettings"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgHubShared')]",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('hubVnetName')]",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                    "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgHubShared'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('hubCidr')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "[parameters('hubGatewaySubnetCidr')]"
                        }
                    },
                    {
                        "name": "AzureFirewallSubnet",
                        "properties": {
                            "addressPrefix": "[parameters('hubFirewallSubnetCidr')]"
                        }
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "[parameters('hubBastionSubnetCidr')]"
                        }
                    },
                    {
                        "name": "[parameters('sharedServicesSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('hubSharedServicesCidr')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgHubShared'))]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('appGatewaySubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('hubAppGatewayCidr')]"
                        }
                    }
                ],
                "enableDdosProtection": "[variables('ddosStandardProtection')]"
            },
            "resources": [
            ]
        },
        {
            "name": "[parameters('laWorkspaceName')]",
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2015-11-01-preview",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "sku": {
                    "name": "PerGB2018"
                },
                "retentionInDays": "[variables('logAnalyticsRetention')]"
            }
        },        
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[variables('keyVaultPrivateDnsZone')]",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(variables('keyVaultPrivateDnsZone'), '/', variables('keyVaultPrivateZoneLinkName'))]",
            "location": "global",
            "dependsOn": [],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubVnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[variables('msSqlPrivateDnsZone')]",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(variables('msSqlPrivateDnsZone'), '/', variables('msSqlPrivateZoneLinkName'))]",
            "location": "global",
            "dependsOn": [            
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubVnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[variables('appPrivateDnsZone')]",
            "location": "global"
        },
        
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(variables('appPrivateDnsZone'), '/', variables('appPrivateZoneLinkName'))]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('appPrivateDnsZone') )]",
                "[concat('Microsoft.Network/privateDnsZones/',variables('keyVaultPrivateDnsZone'),'/virtualNetworkLinks/',variables('keyVaultPrivateZoneLinkName'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubVnetName'))]"
                }
            }
        },
        {
            "name": "[parameters('bastionPublicIpName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-11-01",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "publicIpAllocationMethod": "Static"
            },
            "sku": {
                "name": "Standard"
            }
        },
        {
            "name": "[parameters('azFirewallPublicIpName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-11-01",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "publicIpAllocationMethod": "Static"
            },
            "sku": {
                "name": "Standard"
            }
        },
        {
            "name": "[parameters('azureFirewallName')]",
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIpAddresses/', parameters('azFirewallPublicIpName'))]",
                //"[concat('Microsoft.Network/virtualNetworks/', parameters('spokeVnetName'),'/virtualNetworkPeerings/',variables('spokeToHubPeeringName'))]",
                //"[concat('Microsoft.Network/virtualNetworks/', parameters('hubVnetName'),'/virtualNetworkPeerings/',parameters('hubToSpokePeeringName'))]",
                "[concat('Microsoft.Network/privateDnsZones/',variables('keyVaultPrivateDnsZone'),'/virtualNetworkLinks/',variables('keyVaultPrivateZoneLinkName'))]",
                "[concat('Microsoft.Network/privateDnsZones/',variables('appPrivateDnsZone'),'/virtualNetworkLinks/',variables('appPrivateZoneLinkName'))]"
            ],
            "zones": [
                "1"
            ],
            "properties": {
                "networkRuleCollections": [
                    {
                        "name": "VmAppAccess",
                        "properties": {
                            "priority": 100,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "AllowVMAppAccess",
                                    "description": "Allows VM in hub to call web Spring Apps direct",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('hubSharedServicesCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "[parameters('spokeAppSubnetCidr')]"
                                    ],
                                    "destinationPorts": [
                                        "80",
                                        "443"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "VmInternetAccess",
                        "properties": {
                            "priority": 101,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "AllowVMAppAccess",
                                    "description": "Allows VM access to the web",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('hubSharedServicesCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "*"
                                    ],
                                    "destinationPorts": [
                                        "80",
                                        "443"
                                    ]
                                },
                                {
                                    "name": "AllowKMSActivation",
                                    "description": "Allows VM acess to KMS servers",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('hubSharedServicesCidr')]"
                                    ],
                                    "destinationFqdns": [
                                        "kms.core.windows.net"
                                    ],
                                    "destinationPorts": [
                                        "1688"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "SpringCloudAccess",
                        "properties": {
                            "priority": 102,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "SpringMgmt",
                                    "description": "Allows access to Spring Cloud Management plane",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('spokeRuntimeSubnetCidr')]",
                                        "[parameters('spokeAppSubnetCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "AzureCloud"
                                    ],
                                    "destinationPorts": [
                                        "443"
                                    ]
                                },
                                {
                                    "name": "KubernetesMgmtTcp",
                                    "description": "Allows underlining Kubernetes cluster management for TCP traffic",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('spokeRuntimeSubnetCidr')]",
                                        "[parameters('spokeAppSubnetCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "AzureCloud"
                                    ],
                                    "destinationPorts": [
                                        "9000"
                                    ]
                                },
                                {
                                    "name": "KubernetesMgmtUdp",
                                    "description": "Allows underlining Kubernetes cluster management for UDP traffic",
                                    "protocols": [
                                        "UDP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('spokeRuntimeSubnetCidr')]",
                                        "[parameters('spokeAppSubnetCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "AzureCloud"
                                    ],
                                    "destinationPorts": [
                                        "1194"
                                    ]
                                },
                                {
                                    "name": "AzureContainerRegistery",
                                    "description": "Allows access to Azure Container Registery",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('spokeRuntimeSubnetCidr')]",
                                        "[parameters('spokeAppSubnetCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "AzureContainerRegistry"
                                    ],
                                    "destinationPorts": [
                                        "443"
                                    ]
                                },
                                {
                                    "name": "AzureStorage",
                                    "description": "Allows access to Azure File Storage",
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('spokeRuntimeSubnetCidr')]",
                                        "[parameters('spokeAppSubnetCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "Storage"
                                    ],
                                    "destinationPorts": [
                                        "445"
                                    ]
                                },
                                {
                                    "name": "NtpQuery",
                                    "description": "Allows access of nodes for NTP to Ubuntu time servers",
                                    "protocols": [
                                        "UDP"
                                    ],
                                    "sourceAddresses": [
                                        "[parameters('spokeRuntimeSubnetCidr')]",
                                        "[parameters('spokeAppSubnetCidr')]"
                                    ],
                                    "destinationAddresses": [
                                        "*"
                                    ],
                                    "destinationPorts": [
                                        "123"
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "applicationRuleCollections": [
                    {
                        "name": "AllowSpringCloudWebAccess",
                        "properties": {
                            "priority": 100,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "AllowAks",
                                    "description": "Allow access for Azure Kubernetes Service",
                                    "sourceAddresses": [
                                        "[parameters('spokeRuntimeSubnetCidr')]",
                                        "[parameters('spokeAppSubnetCidr')]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "fqdnTags": [
                                        "AzureKubernetesService"
                                    ]
                                },
                                {
                                    "name": "AllowKubMgmt",
                                    "description": "Allow access for Kubernetes Cluster Management",
                                    "sourceAddresses": [
                                        "[parameters('spokeRuntimeSubnetCidr')]",
                                        "[parameters('spokeAppSubnetCidr')]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "*.azmk8s.io",
                                        "management.azure.com"
                                    ]
                                },
                                {
                                    "name": "AllowMCR",
                                    "description": "Allow access to Microsoft Container Registry",
                                    "sourceAddresses": [
                                        "[parameters('spokeRuntimeSubnetCidr')]",
                                        "[parameters('spokeAppSubnetCidr')]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "mcr.microsoft.com"
                                    ]
                                },
                                {
                                    "name": "AllowMCRStorage",
                                    "description": "Allow access to Microsoft Container Registry storage backed by CDN",
                                    "sourceAddresses": [
                                        "[parameters('spokeRuntimeSubnetCidr')]",
                                        "[parameters('spokeAppSubnetCidr')]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "*.cdn.mscr.io",
                                        "*.data.mcr.microsoft.com"
                                    ]
                                },
                                {
                                    "name": "AllowAzureAd",
                                    "description": "Allow access to Azure AD for authentication",
                                    "sourceAddresses": [
                                        "[parameters('spokeRuntimeSubnetCidr')]",
                                        "[parameters('spokeAppSubnetCidr')]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "login.microsoftonline.com"
                                    ]
                                },
                                {
                                    "name": "AllowMSPackRepo",
                                    "description": "Allow access to Microsoft package repository",
                                    "sourceAddresses": [
                                        "[parameters('spokeRuntimeSubnetCidr')]",
                                        "[parameters('spokeAppSubnetCidr')]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "packages.microsoft.com",
                                        "acs-mirror.azureedge.net"
                                    ]
                                },
                                {
                                    "name": "AllowGitHub",
                                    "description": "Allow GitHub",
                                    "sourceAddresses": [
                                        "[parameters('spokeRuntimeSubnetCidr')]",
                                        "[parameters('spokeAppSubnetCidr')]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "github.com"
                                    ]
                                },
                                {
                                    "name": "AllowDocker",
                                    "description": "Allow Docker",
                                    "sourceAddresses": [
                                        "[parameters('spokeRuntimeSubnetCidr')]",
                                        "[parameters('spokeAppSubnetCidr')]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "*.docker.io",
                                        "*.docker.com"
                                    ]
                                },
                                {
                                    "name": "AllowSnapcraft",
                                    "description": "Allow Snapcraft",
                                    "sourceAddresses": [
                                        "[parameters('spokeRuntimeSubnetCidr')]",
                                        "[parameters('spokeAppSubnetCidr')]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "api.snapcraft.io"
                                    ]
                                },
                                {
                                    "name": "AllowClamAv",
                                    "description": "Allow ClamAv",
                                    "sourceAddresses": [
                                        "[parameters('spokeRuntimeSubnetCidr')]",
                                        "[parameters('spokeAppSubnetCidr')]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "database.clamav.net"
                                    ]
                                },
                                {
                                    "name": "Allow*UbuntuMisc",
                                    "description": "Allow Ubuntu Misc",
                                    "sourceAddresses": [
                                        "[parameters('spokeRuntimeSubnetCidr')]",
                                        "[parameters('spokeAppSubnetCidr')]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "motd.ubuntu.com"
                                    ]
                                },
                                {
                                    "name": "MsCrls",
                                    "description": "Allows access to Microsoft CRL distribution points",
                                    "sourceAddresses": [
                                        "[parameters('spokeRuntimeSubnetCidr')]",
                                        "[parameters('spokeAppSubnetCidr')]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Http",
                                            "port": 80
                                        }
                                    ],
                                    "targetFqdns": [
                                        "crl.microsoft.com",
                                        "mscrl.microsoft.com"
                                    ]
                                },
                                {
                                    "name": "AllowDigiCerty",
                                    "description": "Allows access to Microsoft CRL distribution points",
                                    "sourceAddresses": [
                                        "[parameters('spokeRuntimeSubnetCidr')]",
                                        "[parameters('spokeAppSubnetCidr')]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Http",
                                            "port": 80
                                        }
                                    ],
                                    "targetFqdns": [
                                        "crl3.digicert.com",
                                        "crl4.digicert.com"
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubVnetName'), 'AzureFirewallSubnet')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('azFirewallPublicIpName'))]"
                            }
                        }
                    }
                ],
                "threatIntelMode": "Alert",
                "sku": {
                    "name": "AZFW_VNet",
                    "tier": "Standard"
                },
                "additionalProperties": {
                    "Network.DNS.EnableProxy": "true"
                }
            }
        },
        {
            "name": "[concat(parameters('azureFirewallName'),'/microsoft.insights/diag')]",
            "type": "Microsoft.Network/azureFirewalls/providers/diagnosticSettings",
            "apiVersion": "2017-05-01-preview",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Network/azureFirewalls/',parameters('azureFirewallName'))]",
                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('laWorkspaceName'))]"
            ],
            "properties": {
                "name": "SendToWorkspace",
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces',parameters('laWorkspaceName'))]",
                "logs": [
                    {
                        "category": "AzureFirewallApplicationRule",
                        "enabled": true
                    },
                    {
                        "category": "AzureFirewallNetworkRule",
                        "enabled": true
                    },
                    {
                        "category": "AzureFirewallDnsProxy",
                        "enabled": true
                    }
                ],
                "metrics": [
                    {
                        "category": "AllMetrics",
                        "enabled": true
                    }
                ]
            },
            "resources": [
            ]
        },        
        {
            "name": "[parameters('bastionName')]",
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2020-11-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIpAddresses/',parameters('bastionPublicIpName'))]",
                "[concat('Microsoft.Network/virtualNetworks/',parameters('hubVnetName'))]"
                
            ],
            "tags": "[parameters('tags')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "bastionConfig",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubVnetName'), 'AzureBastionSubnet')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('bastionPublicIpName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ]
            }
        }
        
    ],
    "outputs": {
    }
}

{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "tenantId": {
            "type": "string",
            "metadata": {
                "description": "Your tenant ID"
            }
        },
        "hubRGName": {
            "type": "string",
            "metadata": {
                "description": "resource group name for Hub resources"
            }
        },
        "springCloudPrincipalObjectId": {
            "type": "string",
            "metadata": {
                "description": "The object ID of the Azure Spring Cloud Resource Provider service principal"
            }
        },
        "skuTier": {
            "type": "string",
            "allowedValues": [
                "Standard",
                "Enterprise"
            ],
            "metadata": {
                "description": "The sku Tier for Azure Spring Apps"
            }
        },
        "keyVaultAdminObjectId": {
            "type": "string",
            "metadata": {
                "description": "The object ID of the security principal that will have permissions over the Key Vault instance"
            }
        },
        "vmAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "Administrator name for VMs that are created"
            }
        },
        "vmAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the VMs that are created"
            }
        },
        "tags": {
            "type": "object",
            "metadata": {
                "description": "The tags that will be associated to the VM"
            },
            "defaultValue": {
                "environment": "lab"
            }
        }
    },
    "variables": {
        "springCloudSkuName": "S0",
        "springCloudSkuTier": "Standard",
        "vmSku": "Standard_DS2_v2",
        "keyVaultSku": "Standard",
        "ddosStandardProtection": false,
        "logAnalyticsRetention": 30,
        "keyPermissions": [
            "list",
            "encrypt",
            "decrypt",
            "wrapKey",
            "unwrapKey",
            "sign",
            "verify",
            "get",
            "create",
            "update",
            "import",
            "backup",
            "restore",
            "recover"
        ],
        "secretsPermissions": [
            "list",
            "get",
            "set",
            "backup",
            "restore",
            "recover"
        ],
        "certPermissions": [
            "backup",
            "create",
            "get",
            "getissuers",
            "import",
            "list",
            "listissuers",
            "managecontacts",
            "manageissuers",
            "recover",
            "restore",
            "setissuers",
            "update"
        ],
        "location": "[resourceGroup().location]",
        "networkApiVersion": "2020-05-01",
        "dnsApiVersion": "2018-09-01",
        "resourceDeploymentsApiVersion": "2019-10-01",
        "laApiVersion": "2015-11-01-preview",
        "diagApiVersion": "2017-05-01-preview",
        "springApiVersion": "2020-07-01",
        "appInsightsApiVersion": "2015-05-01",
        "azureRbacApiVersion": "2020-04-01-preview",
        "keyVaultApiVersion": "2019-09-01",
        "hubVnetName": "vnet-hub",
        "spokeVnetName": "vnet-spoke",
        "hubCidr": "10.0.0.0/16",
        "spokeCidr": "10.1.0.0/16",
        "hubGatewaySubnetCidr": "10.0.0.0/24",
        "hubFirewallSubnetCidr": "10.0.1.0/24",
        "hubBastionSubnetCidr": "10.0.2.0/24",
        "hubAppGatewayCidr": "10.0.3.0/24",
        "hubSharedServicesCidr": "10.0.4.0/24",
        "spokeRuntimeSubnetCidr": "10.1.0.0/24",
        "spokeAppSubnetCidr": "10.1.1.0/24",
        "spokeSupportSubnetCidr": "10.1.2.0/24",
        "spokeDataSubnetCidr": "10.1.3.0/24",
        "spokePostgreSQLCidr": "10.1.5.0/24",
        "spokeMySQLCidr": "10.1.5.0/24",
        "springCloudServiceCidrs": "10.3.0.0/16,10.4.0.0/16,10.5.0.1/16",
        "PostgreSQLSubnetName": "snet-PostgreSQL",
        "mySQLSubnetName": "snet-MySQL",
        "appGatewaySubnetName": "snet-agw",
        "sharedServicesSubnetName": "snet-shared",
        "supportSubnetName": "snet-support",
        "runtimeSubnetName": "snet-runtime",
        "appSubnetName": "snet-app",
        "dataSubnetName": "snet-data",
        "bastionPublicIpName": "pip-bastion",
        "azFirewallPublicIpName": "pip-azfw",
        "bastionName": "bstss",
        "azureFirewallName": "fwhub",
        "hubRouteTable": "rt-hub",
        "hubVmName": "vm01",
        "hubToSpokePeeringName": "peerhubtospoke",
        "spokeRuntimeRouteTable": "rt-spokeruntime",
        "spokeAppRouteTable": "rt-spokeapp",
        "spokeToHubPeeringName": "peerspoketohub",
        "laWorkspaceName": "[concat('la-',uniqueString(subscription().id, resourceGroup().id))]",
        "keyVaultName": "[concat('kv-',uniqueString(subscription().id, resourceGroup().id))]",
        "mysqlServerName": "[concat('mysql-',uniqueString(resourceGroup().id))]",
        "postgreSqlServerName" : "[concat('psql-',uniqueString(resourceGroup().id))]",
        "redisName": "[concat('redis-',uniqueString(resourceGroup().id))]",
        "nsgHubShared": "nsg-hubshared",
        "nsgSpokeRuntime": "nsg-spokeruntime",
        "nsgSpokeApp": "nsg-spokeapp",
        "appInsightsName": "[concat('appi-', uniqueString(subscription().id, resourceGroup().id))]",
        "springCloudInstanceName": "[concat('spring-', uniqueString(subscription().id, resourceGroup().id))]",
        "ownerDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
        "appPrivateDnsZone": "private.azuremicroservices.io",
        "keyVaultPrivateDnsZone": "privatelink.vaultcore.azure.net",
        "mySqlPrivateDnsZone": "private.mysql.database.azure.com",
        "postgreSqlPrivateDnsZone" : "private.postgres.database.azure.com",
        "redisPrivateDnsZone": "privatelink.redis.cache.windows.net",
        "uniqueKvPrivateEndpointName": "[substring(concat(concat('pl-',variables('keyVaultName')),uniqueString(subscription().id, resourceGroup().id)),10)]",
        "uniqueKvPlConnName": "[substring(concat(concat('plconn',variables('keyVaultName')),uniqueString(subscription().id, resourceGroup().id)),10)]",
        "uniqueRedisPrivateEndpointName": "[substring(concat(concat('pl-',variables('redisName')),uniqueString(subscription().id, resourceGroup().id)),10)]",
        "uniqueRedisPlConnName": "[substring(concat(concat('plconn',variables('redisName')),uniqueString(subscription().id, resourceGroup().id)),10)]",
        "appPrivateZoneLinkName": "[concat(variables('appPrivateDnsZone'), '-link')]",
        "keyVaultPrivateZoneLinkName": "[concat(variables('keyVaultPrivateDnsZone'), '-link')]",
        "mySqlPrivateZoneLinkName": "[concat(variables('mySqlPrivateDnsZone'), '-link')]",
        "redisPrivateZoneLinkName": "[concat(variables('redisPrivateDnsZone'),'-link')]",
        "deployDnsARecord": "deploy-springDnsRecord",
        "deployRouteAssign": "deploy-routeAssign",
        "deployDnsSpokeRouteSettings": "deploy-dnsSettings",
        "hubResourcesDeploy" : "deploy-hubResources",
        "subnetDelegationMySQL": "Microsoft.DBforMySQL/flexibleServers",
        "subnetDelegationPostgreSQL" : "Microsoft.DBforPostgreSQL/flexibleServers",
        "uniqueRoleGuidSpokeVnet": "[guid(resourceId('Microsoft.Network/virtualNetworks',  variables('spokeVnetName')), variables('ownerDefinitionId'), resourceId('Microsoft.Network/virtualNetworks', variables('spokeVnetName')))]",
        "uniqueRoleGuidRuntimeRouteTable": "[guid(resourceId('Microsoft.Network/routeTables',  variables('spokeRuntimeRouteTable')), variables('ownerDefinitionId'), resourceId('Microsoft.Network/routeTables', variables('spokeRuntimeRouteTable')))]",
        "uniqueRoleGuidAppRouteTable": "[guid(resourceId('Microsoft.Network/routeTables',  variables('spokeAppRouteTable')), variables('ownerDefinitionId'), resourceId('Microsoft.Network/routeTables', variables('spokeAppRouteTable')))]",
        "springStandardLinkedURI": "https://raw.githubusercontent.com/Azure/azure-spring-cloud-reference-architecture/arm-testing/ARM/linkedStandard.json",
        "springEnterpriseLinkedURI":"https://raw.githubusercontent.com/Azure/azure-spring-cloud-reference-architecture/arm-testing/ARM/linkedEnterprise.json"
        
    },
    "resources": [
        
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgSpokeApp')]",
            "apiVersion": "2020-05-01",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgSpokeRuntime')]",
            "apiVersion": "2020-05-01",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },
        
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('spokeVnetName')]",
            "apiVersion": "2020-05-01",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgSpokeApp'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgSpokeRuntime'))]",
                "[variables('hubResourcesDeploy')]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('spokeCidr')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('runtimeSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('spokeRuntimeSubnetCidr')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',variables('spokeRuntimeRouteTable'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgSpokeRuntime'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('appSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('spokeAppSubnetCidr')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',variables('spokeAppRouteTable'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgSpokeApp'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('supportSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('spokeSupportSubnetCidr')]",
                            "privateEndpointNetworkPolicies": "Disabled"
                        }
                    },
                    {
                        "name": "[variables('dataSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('spokeDataSubnetCidr')]",
                            //"privateEndpointNetworkPolicies": "Disabled",
                            "delegations": [
                                {
                                "name": "[if(equals(parameters('skuTier'), 'Standard'), variables('subnetDelegationMySQL'), variables('subnetDelegationPostgreSQL'))]",
                                "properties": {          
                                    "serviceName": "[if(equals(parameters('skuTier'), 'Standard'), variables('subnetDelegationMySQL'), variables('subnetDelegationPostgreSQL'))]"        
                                    }
                                }
                            ]
                        }
                    }
                ],
                "enableDdosProtection": "[variables('ddosStandardProtection')]",
                "dhcpOptions": {
                    "dnsServers": [
                        "[reference(variables('hubResourcesDeploy')).outputs.fwip.value]"
                    ]
                }
            },
            "resources": [
            ]
        },
        
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "[variables('azureRbacApiVersion')]",
            "name": "[variables('uniqueRoleGuidSpokeVnet')]",
            "scope": "[concat('Microsoft.Network/virtualNetworks', '/', variables('spokeVnetName'))]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('spokeVnetName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('ownerDefinitionId')]",
                "principalId": "[parameters('springCloudPrincipalObjectId')]"
            }
        },
        {
            "name": "[variables('hubResourcesDeploy')]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('hubRGName')]",
            "apiVersion": "2019-10-01",
            "dependsOn": [
                //"[concat('Microsoft.Network/virtualNetworks/', variables('spokeVnetName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "hubCidr": {
                        "value": "[variables('hubCidr')]"
                    },
                    "hubGatewaySubnetCidr": {
                        "value": "[variables('hubGatewaySubnetCidr')]"
                    },
                    "hubFirewallSubnetCidr": {
                        "value": "[variables('hubFirewallSubnetCidr')]"
                    },
                    "hubBastionSubnetCidr": {
                        "value": "[variables('hubBastionSubnetCidr')]"
                    },
                    "hubVnetName": {
                        "value": "[variables('hubVnetName')]"
                    },                                   
                    "spokeAppSubnetCidr": {
                        "value": "[variables('spokeAppSubnetCidr')]"
                    },
                    "spokeRuntimeSubnetCidr": {
                        "value": "[variables('spokeRuntimeSubnetCidr')]"
                    },
                    "bastionPublicIpName": {
                        "value": "[variables('bastionPublicIpName')]"
                    },
                    "azFirewallPublicIpName": {
                        "value": "[variables('azFirewallPublicIpName')]"
                    },
                    "azureFirewallName": {
                        "value": "[variables('azureFirewallName')]"
                    },
                    "laWorkspaceName": {
                        "value": "[variables('laWorkspaceName')]"
                    },
                    "bastionName": {
                        "value": "[variables('bastionName')]"
                    },                    
                    "hubSharedServicesCidr": {
                        "value": "[variables('hubSharedServicesCidr')]"
                    },
                    "hubAppGatewayCidr": {
                        "value": "[variables('hubAppGatewayCidr')]"
                    },
                    "sharedServicesSubnetName": {
                        "value": "[variables('sharedServicesSubnetName')]"
                    },
                    "appGatewaySubnetName": {
                        "value": "[variables('appGatewaySubnetName')]"
                    },
                    "hubRouteTable": {
                        "value": "[variables('hubRouteTable')]"
                    },
                    "deployRouteAssign": {
                        "value": "[variables('deployRouteAssign')]"
                    },
                    "nsghubshared": {
                        "value": "[variables('nsghubshared')]"
                    }
                    
                    
                },
                "templateLink": {

                    "uri": "https://raw.githubusercontent.com/Azure/azure-spring-cloud-reference-architecture/arm-testing/ARM/linkedHub.json",

                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[concat(variables('spokeVnetName'),'/',variables('spokeToHubPeeringName'))]",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-05-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('hubResourcesDeploy')]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('spokeVnetName'))]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('hubRGName'),'/providers/Microsoft.Network/virtualNetworks/',variables('hubVnetName'))]"
                }
            }
        },
        {
            "name": "[variables('spokeRuntimeRouteTable')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-05-01",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[variables('hubResourcesDeploy')]"
            ],
            "properties": {
                "routes": [
                    {
                        "name": "udr-default",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[reference(variables('hubResourcesDeploy')).outputs.fwip.value]"
                        }
                    }
                ],
                "disableBgpRoutePropagation": false
            },
            "resources": [
            ]
        },
        {
            "name": "[variables('spokeAppRouteTable')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-05-01",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[variables('hubResourcesDeploy')]"
            ],
            "properties": {
                "routes": [
                    {
                        "name": "udr-default",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[reference(variables('hubResourcesDeploy')).outputs.fwip.value]"
                        }
                    }
                ],
                "disableBgpRoutePropagation": false
            },
            "resources": [
            ]
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[variables('uniqueRoleGuidRuntimeRouteTable')]",
            "scope": "[concat('Microsoft.Network/routeTables', '/', variables('spokeRuntimeRouteTable'))]",
            "dependsOn": [
                "[concat('Microsoft.Network/routeTables/', variables('spokeRuntimeRouteTable'))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('ownerDefinitionId')]",
                "principalId": "[parameters('springCloudPrincipalObjectId')]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[variables('uniqueRoleGuidAppRouteTable')]",
            "scope": "[concat('Microsoft.Network/routeTables', '/', variables('spokeAppRouteTable'))]",
            "dependsOn": [
                "[concat('Microsoft.Network/routeTables/', variables('spokeAppRouteTable'))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('ownerDefinitionId')]",
                "principalId": "[parameters('springCloudPrincipalObjectId')]"
            }
        },
        {
            "name": "hubPeeringDeploy",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('hubRGName')]",
            "apiVersion": "2019-10-01",
            "dependsOn": [
                "[variables('spokeVnetName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "name": "[concat(variables('hubVnetName'),'/',variables('hubToSpokePeeringName'))]",
                            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                            "apiVersion": "2020-05-01",
                            "properties": {
                                "allowVirtualNetworkAccess": true,
                                "allowForwardedTraffic": true,
                                "useRemoteGateways": false,
                                "remoteVirtualNetwork": {
                                    "id": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Network/virtualNetworks/',variables('spokeVnetName'))]"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "DeployFlexibleServerPrivateDnsZoneLinks",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('hubRGName')]",
            "apiVersion": "2019-10-01",
            "dependsOn": [
                "[variables('spokeVnetName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "name": "[concat(variables('postgreSqlPrivateDnsZone'), '/spoke-link')]",
                            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                            "apiVersion": "2018-09-01",
                            "location": "global",
                            "properties": {
                                "registrationEnabled": false,
                                "virtualNetwork": {
                                     "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('spokeVnetName'))]"
                                }
                            }
                        },
                        {
                            "name": "[concat(variables('mySqlPrivateDnsZone'), '/spoke-link')]",
                            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                            "apiVersion": "2018-09-01",
                            "location": "global",
                            "properties": {
                                "registrationEnabled": false,
                                "virtualNetwork": {
                                     "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('spokeVnetName'))]"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "name": "[variables('appInsightsName')]",
            "apiVersion": "2020-02-02-preview",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[variables('appInsightsName')]",
                "Flow_Type": "Bluefield",
                "Request_Source": "rest",
                "WorkspaceResourceId": "[reference(variables('hubResourcesDeploy')).outputs.laWorkspaceID.value]"
            }
        },
        {
            "name": "[variables('keyVaultName')]",
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "[variables('keyVaultApiVersion')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('spokeVnetName'))]"
            ],
            "tags": "[parameters('tags')]",
            "properties": {
                "accessPolicies": [
                    {
                        "objectId": "[parameters('keyVaultAdminObjectId')]",
                        "tenantId": "[parameters('tenantId')]",
                        "permissions": {
                            "keys": "[variables('keyPermissions')]",
                            "secrets": "[variables('secretsPermissions')]",
                            "certificates": "[variables('certPermissions')]"
                        }
                    }
                ],
                "tenantid": "[parameters('tenantId')]",
                "sku": {
                    "family": "A",
                    "name": "[variables('keyVaultSku')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-05-01",
            "name": "[variables('uniqueKvPrivateEndpointName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
            ],
            "properties": {
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('spokeVnetName'), variables('supportSubnetName'))]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('uniqueKvPlConnName')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                            "groupIds": [
                                "Vault"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('uniqueKvPrivateEndpointName'),'/default')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints' , variables('uniqueKvPrivateEndpointName'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "config1",
                        "properties": {
                            "privateDnsZoneId": "[resourceId(parameters('hubRGName'),'Microsoft.Network/privateDnsZones', variables('keyVaultPrivateDnsZone'))]"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('postgreSqlServerName')]",
            "type": "Microsoft.DBforPostgreSQL/flexibleServers",
            "apiVersion": "2021-06-01",
            "condition": "[equals(parameters('skuTier'),'Enterprise')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('spokeVnetName'))]",
                "hubPeeringDeploy",
                "DeployFlexibleServerPrivateDnsZoneLinks"
            ],            
            "sku": {
                "name": "Standard_D2ds_v4",
                "tier": "GeneralPurpose"
            },
            "tags": "[parameters('tags')]",
            "properties": {
                "administratorLogin": "[parameters('vmAdminUsername')]",
                "administratorLoginPassword": "[parameters('vmAdminPassword')]",
                "availabilityZone": "1",
                "backup": {
                    "backupRetentionDays": 7,
                    "geoRedundantBackup": "disabled"
                },
                "highAvailability": {
                    "mode": "Disabled"
                },
                "Network": {
				"publicNetworkAccess": "Disabled",
				"delegatedSubnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('spokeVnetName'), variables('dataSubnetName'))]",
				"privateDnsZoneArmResourceId": "[resourceId(parameters('hubRGName'),'Microsoft.Network/privateDnsZones',variables('postgreSqlPrivateDnsZone'))]"
			    },
                "Storage": {
                    "StorageSizeGB": 128
                },
                "version": "13"
            }
        },
        {
            "name": "[variables('redisName')]",
            "type": "Microsoft.Cache/redis",
            "apiVersion": "2021-06-01",
            "condition": "[equals(parameters('skuTier'),'Enterprise')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('spokeVnetName'))]"
            ],
            "properties": {
                "sku": {
                    "name": "Basic",
                    "family": "C",
                    "capacity": 0
                },
                "redisConfiguration": {},
                "enableNonSslPort": false,
                "redisVersion": "4",
                "publicNetworkAccess": "Disabled"
            }
            
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-05-01",
            "condition": "[equals(parameters('skuTier'),'Enterprise')]",
            "name": "[variables('uniqueredisPrivateEndpointName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/redis', variables('redisName'))]"
            ],
            "properties": {
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('spokeVnetName'), variables('supportSubnetName'))]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('uniqueRedisPlConnName')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Cache/redis', variables('redisName'))]",
                            "groupIds": [
                                "redisCache"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-05-01",
            "condition": "[equals(parameters('skuTier'),'Enterprise')]",
            "name": "[concat(variables('uniqueRedisPrivateEndpointName'),'/default')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints' , variables('uniqueRedisPrivateEndpointName'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "config1",
                        "properties": {
                            "privateDnsZoneId": "[resourceId(parameters('hubRGName'),'Microsoft.Network/privateDnsZones', variables('redisPrivateDnsZone'))]"
                        }
                    }
                ]
            }
        },
        {
            "name": "springDeploy",
            "type": "Microsoft.Resources/deployments",            
            "apiVersion": "2019-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('spokeVnetName'))]",                
                "[concat('Microsoft.Authorization/roleAssignments/', variables('uniqueRoleGuidRuntimeRouteTable'))]",
                "[concat('Microsoft.Authorization/roleAssignments/', variables('uniqueRoleGuidAppRouteTable'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "hubRGName": {
                        "value": "[parameters('hubRGName')]"
                    },
                    "springCloudInstanceName": {
                        "value": "[variables('springCloudInstanceName')]"
                    },
                    "springCloudServiceCidrs": {
                        "value": "[variables('springCloudServiceCidrs')]"
                    },
                    "spokeVnetName": {
                        "value": "[variables('spokeVnetName')]"
                    },
                    "runtimeSubnetName": {
                        "value": "[variables('runtimeSubnetName')]"
                    },                                   
                    "appSubnetName": {
                        "value": "[variables('appSubnetName')]"
                    },
                    "appInsightsName": {
                        "value": "[variables('appInsightsName')]"
                    },
                    "laWorkspaceName": {
                        "value": "[variables('laWorkspaceName')]"
                    }               
                    
                },
                "templateLink": {
                    "uri": "[if(equals(parameters('skuTier'), 'Standard'), variables('springStandardLinkedURI'), variables('springEnterpriseLinkedURI'))]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "type": "Microsoft.AppPlatform/Spring/providers/diagnosticSettings",
            "name": "[concat(variables('springCloudInstanceName'), '/Microsoft.Insights/monitoring')]",
            "dependsOn": [
                "springDeploy"
            ],
            "apiVersion": "2017-05-01-preview",
            "properties": {
                "name": "monitoring",
                "workspaceId": "[reference(variables('hubResourcesDeploy')).outputs.laWorkspaceID.value]",
                "logs": [
                    {
                        "category": "ApplicationConsole",
                        "enabled": true,
                        "retentionPolicy": {
                            "days": 30,
                            "enabled": false
                        }
                        
                    }
                ]
            }
        },
        {
            "name": "[variables('hubVmName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "dependsOn": [
                "[variables('hubResourcesDeploy')]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('spokeVnetName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "tagValues": {
                        "value": "[parameters('tags')]"
                    },
                    "vmName": {
                        "value": "[variables('hubVmName')]"
                    },
                    "vnetName": {
                        "value": "[variables('hubVnetName')]"
                    },
                    "vnetResourceGroup": {
                        "value" :"[parameters('hubRGName')]"
                    },
                    "subnetName": {
                        "value": "[variables('sharedServicesSubnetName')]"
                    },
                    "virtualMachineSize": {
                        "value": "[variables('vmSku')]"
                    },
                    "adminUserName": {
                        "value": "[parameters('vmAdminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('vmAdminPassword')]"
                    }
                    
                },
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/Azure/azure-spring-cloud-reference-architecture/arm-testing/ARM/linkedVM.json",
                    "contentVersion": "1.0.0.0"
                }
            }
        }
                
    ],
    "outputs": {
    }
}
